

CREATE COMPUTE MODULE collection_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();
		
		DECLARE i INTEGER 1;
		DECLARE msgs REFERENCE TO InputRoot.Collection.In2[i].JSON.Data.kontrahent;

		WHILE LASTMOVE(msgs) DO
			CREATE FIELD OutputRoot.JSON.Data.kontrahenci IDENTITY (JSON.Array)kontrahenci;
			SET OutputRoot.JSON.Data.kontrahenci.[i] = msgs;	
			SET i = i + 1;			
			MOVE msgs TO InputRoot.Collection.In2[i].JSON.Data.kontrahent;			
		END WHILE;	
		
		-- Ten kod działa tak, że rzuca obiekt 1 i 2. Potem rzuca obiekt 3, oddzielnie. Skleja, ale nie w formacie JSON --
		-- jest tak: ...kontrahenci: {obiekt 1}, {obiekt 2}, [{kontrahenci:{obiekt 3}] --	
						
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;

